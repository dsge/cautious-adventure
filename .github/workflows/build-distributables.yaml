name: Test Flow
on: [push, pull_request]

concurrency:
  group: ci-${{github.actor}}-${{github.head_ref || github.run_number}}-${{github.ref}}-static
  cancel-in-progress: true

jobs:
  build-all-dist:
    name: Build distributables
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: 
          submodules: recursive
      - name: Install dependencies
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qqq build-essential tar mingw-w64
      - run: sudo update-alternatives --set x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix
      - run: sudo update-alternatives --set x86_64-w64-mingw32-gcc /usr/bin/x86_64-w64-mingw32-gcc-posix
      - run: echo "BLENDER_AND_GODOT_EDITOR_DIR=/tmp/blender-and-godot-editor" >> "$GITHUB_ENV"
      - name: Blender and Godot Editor and Export Templates Cache
        id: blenderandgodoteditorcache
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-build-blender-and-godot-editor-and-templates-${{ hashFiles('scons/appenvironment.py') }}
          path: |
            ${{ env.BLENDER_AND_GODOT_EDITOR_DIR }}
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10' 
          cache: 'pip'
      - name: Install scons
        run: python3 -m pip install scons==4.4.0
      - name: build linux so
        run: scons platform=linux -j$(nproc) godot_editor_dir=$BLENDER_AND_GODOT_EDITOR_DIR
      - name: build windows dll
        run: scons platform=windows -j$(nproc) godot_editor_dir=$BLENDER_AND_GODOT_EDITOR_DIR
      - run: echo "LINUX_OUTPUT_DIRNAME=/tmp/dist/app-linux-demo" >> "$GITHUB_ENV"
      - run: echo "WINDOWS_OUTPUT_DIRNAME=/tmp/dist/app-windows-demo" >> "$GITHUB_ENV"
      - run: echo "TAG=$(git describe --tag --always)" >> "$GITHUB_ENV"
      - run: mkdir -p $LINUX_OUTPUT_DIRNAME
      - run: mkdir -p $WINDOWS_OUTPUT_DIRNAME
      - name: Export Linux Build
        run: $BLENDER_AND_GODOT_EDITOR_DIR/Godot_linux.x86_64 --headless --path "$GITHUB_WORKSPACE/godot-project" --export-debug "Linux/X11" $LINUX_OUTPUT_DIRNAME/app-linux-demo.x86_64
      - name: Export Windows Build
        run: $BLENDER_AND_GODOT_EDITOR_DIR/Godot_linux.x86_64 --headless --path "$GITHUB_WORKSPACE/godot-project" --export-debug "Windows Desktop" $WINDOWS_OUTPUT_DIRNAME/app-windows-demo.exe
      - name: Verify Linux Build
        run: if [[ $(find $LINUX_OUTPUT_DIRNAME -type f -name "*.dll" -or -name "*.so" | wc -l) -ge 1 ]]; then echo '.dll or .so found'; else echo '.dll or .so NOT found'; exit 1; fi 
      - uses: actions/upload-artifact@v3
        with:
          name: app-linux-demo-${{ env.TAG }}.zip
          path: ${{ env.LINUX_OUTPUT_DIRNAME }}
      - name: Verify Windows Build
        run: if [[ $(find $WINDOWS_OUTPUT_DIRNAME -type f -name "*.dll" -or -name "*.so" | wc -l) -ge 1 ]]; then echo '.dll or .so found'; else echo '.dll or .so NOT found'; exit 1; fi 
      - uses: actions/upload-artifact@v3
        with:
          name: app-windows-demo-${{ env.TAG }}.zip
          path: ${{ env.WINDOWS_OUTPUT_DIRNAME }}
